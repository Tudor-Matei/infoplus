{"version":3,"file":"static\\development\\pages\\api\\register.js","sources":["webpack:///webpack/bootstrap","webpack:///./configs/bcrypt.js","webpack:///./configs/db.js","webpack:///./pages/api/register.js","webpack:///./utils/checkFieldsValidity.js","webpack:///./utils/connectToDatabase.js","webpack:///./utils/validateUserData.js","webpack:///external \"bcrypt\"","webpack:///external \"mongodb\"","webpack:///external \"validator/lib/escape\"","webpack:///external \"validator/lib/isEmail\"","webpack:///external \"validator/lib/isEmpty\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export default {\r\n    saltRounds: 10,\r\n};\r\n","export default {\r\n    dbURI: \"mongodb://localhost:27017\",\r\n    dbName: \"infoplus\",\r\n};\r\n","import connectToDatabase from \"../../utils/connectToDatabase\";\r\nimport validateUserData from \"../../utils/validateUserData\";\r\nimport bcrypt from \"bcrypt\";\r\nimport bcryptConfig from \"../../configs/bcrypt\";\r\n\r\nexport default async (req, res) => {\r\n    if (!req.body) return res.status(204).end();\r\n    const { error, validatedUserData } = validateUserData(req.body, {\r\n        minimumLengthForEachField: {\r\n            name: 3,\r\n            surname: 3,\r\n            username: 5,\r\n            password: 8,\r\n        },\r\n        hasEmail: true,\r\n    });\r\n    if (error) return res.status(403).json({ ok: false, error });\r\n    validatedUserData.refreshToken = \"\";\r\n\r\n    let closeConnection;\r\n    try {\r\n        validatedUserData.password = await bcrypt.hash(\r\n            validatedUserData.password,\r\n            bcryptConfig.saltRounds\r\n        );\r\n\r\n        const { db, closeConnectionHandler } = await connectToDatabase();\r\n        closeConnection = closeConnectionHandler;\r\n        await db.collection(\"users\").insertOne(validatedUserData);\r\n\r\n        res.status(200).json({ ok: true });\r\n        return closeConnection();\r\n    } catch (e) {\r\n        if (closeConnection) closeConection();\r\n        console.error(e);\r\n        return res.status(500).json({ ok: false });\r\n    }\r\n};\r\n","import isEmpty from \"validator/lib/isEmpty\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\n\r\nexport default function checkFieldsValidity({\r\n    fields = {},\r\n    minimumLengthForEachField = {},\r\n    hasEmail = false,\r\n}) {\r\n    if (thereAreEmptyFields(Object.values(fields)))\r\n        return \"Nu ai completat unul sau mai multe câmpuri.\";\r\n    else if (fieldValuesAreNotLongEnough(fields, minimumLengthForEachField))\r\n        return \"Unul sau mai multe câmpuri nu indeplinesc numarul de caractere minim.\";\r\n    else if (hasEmail && !isEmail(fields.email))\r\n        return \"E-mail-ul pe care l-ai introdus nu este valid.\";\r\n\r\n    return false;\r\n}\r\n\r\nfunction thereAreEmptyFields(fieldValues) {\r\n    return fieldValues.some((fieldValue) => isEmpty(fieldValue));\r\n}\r\n\r\nfunction fieldValuesAreNotLongEnough(fields, minimumLengthForEachField) {\r\n    for (const field of Object.keys(minimumLengthForEachField)) {\r\n        if (fields[field].length < minimumLengthForEachField[field]) return true;\r\n    }\r\n    return false;\r\n}\r\n","import MongoClient from \"mongodb\";\r\nimport dbConfig from \"../configs/db\";\r\n\r\nexport default async function connectToDatabase() {\r\n    const client = await MongoClient.connect(dbConfig.dbURI);\r\n    return { db: client.db(dbConfig.dbName), closeConnectionHandler: () => client.close() };\r\n}\r\n","import checkFieldsValidity from \"./checkFieldsValidity\";\r\nimport escape from \"validator/lib/escape\";\r\n\r\nexport default function validateUserData(\r\n    body = \"\",\r\n    fieldOptions = { minimumLengthForEachField: {}, hasEmail: false }\r\n) {\r\n    const escapedFields = escapeUserData(JSON.parse(body));\r\n    const errorMessage = checkFieldsValidity({\r\n        fields: escapedFields,\r\n        ...fieldOptions,\r\n    });\r\n    if (errorMessage) return { error: errorMessage, validatedUserData: {} };\r\n\r\n    return { error: null, validatedUserData: escapedFields };\r\n}\r\n\r\nfunction escapeUserData(userData) {\r\n    for (const [field, value] of Object.entries(userData)) userData[field] = escape(value);\r\n\r\n    return userData;\r\n}\r\n","module.exports = require(\"bcrypt\");","module.exports = require(\"mongodb\");","module.exports = require(\"validator/lib/escape\");","module.exports = require(\"validator/lib/isEmail\");","module.exports = require(\"validator/lib/isEmpty\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AACA;AADA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AAFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AASA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}