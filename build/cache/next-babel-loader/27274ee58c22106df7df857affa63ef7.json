{"ast":null,"code":"import connectToDatabaseThen from \"../../utils/connectToDatabase\";\nimport checkFieldsValidity from \"../../utils/checkFieldsValidity\";\nimport escape from \"validator/lib/escape\";\nexport default ((req, res) => {\n  const {\n    error,\n    validatedUserData\n  } = validateUserData(req);\n  if (error) return res.status(500).json({\n    ok: false,\n    error\n  });\n  req.body = validatedUserData;\n  connectToDatabaseThen(db => {\n    const users = db.collection(\"users\");\n    users.insertOne(req.body, error => {\n      if (error) {\n        console.error(error);\n        return res.status(500).json({\n          ok: false\n        });\n      }\n\n      res.status(200).json({\n        ok: true\n      });\n    });\n  });\n});\n\nfunction escapeRegisterData(userData) {\n  for (const [key, value] of Object.entries(userData)) userData[key] = escape(value);\n\n  return userData;\n}\n\nfunction validateUserData(req) {\n  const escapedFields = escapeRegisterData(JSON.parse(req.body));\n  const errorMessage = checkFieldsValidity({\n    fields: escapedFields,\n    minimumLengthForEachField: {\n      name: 3,\n      surname: 3,\n      username: 5,\n      password: 8\n    },\n    hasEmail: true\n  });\n  if (errorMessage) return {\n    error: errorMessage,\n    validatedUserData: {}\n  };\n  return {\n    error: false,\n    validatedUserData: escapedFields\n  };\n}","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/pages/api/register.js"],"names":["connectToDatabaseThen","checkFieldsValidity","escape","req","res","error","validatedUserData","validateUserData","status","json","ok","body","db","users","collection","insertOne","console","escapeRegisterData","userData","key","value","Object","entries","escapedFields","JSON","parse","errorMessage","fields","minimumLengthForEachField","name","surname","username","password","hasEmail"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BC,gBAAgB,CAACJ,GAAD,CAArD;AACA,MAAIE,KAAJ,EAAW,OAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,EAAE,EAAE,KAAN;AAAaL,IAAAA;AAAb,GAArB,CAAP;AACXF,EAAAA,GAAG,CAACQ,IAAJ,GAAWL,iBAAX;AAEAN,EAAAA,qBAAqB,CAAEY,EAAD,IAAQ;AAC1B,UAAMC,KAAK,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAd;AAEAD,IAAAA,KAAK,CAACE,SAAN,CAAgBZ,GAAG,CAACQ,IAApB,EAA2BN,KAAD,IAAW;AACjC,UAAIA,KAAJ,EAAW;AACPW,QAAAA,OAAO,CAACX,KAAR,CAAcA,KAAd;AACA,eAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAArB,CAAP;AACH;;AAEDN,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAArB;AACH,KAPD;AAQH,GAXoB,CAArB;AAYH,CAjBD;;AAmBA,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeJ,QAAf,CAA3B,EACIA,QAAQ,CAACC,GAAD,CAAR,GAAgBjB,MAAM,CAACkB,KAAD,CAAtB;;AAEJ,SAAOF,QAAP;AACH;;AAED,SAASX,gBAAT,CAA0BJ,GAA1B,EAA+B;AAC3B,QAAMoB,aAAa,GAAGN,kBAAkB,CAACO,IAAI,CAACC,KAAL,CAAWtB,GAAG,CAACQ,IAAf,CAAD,CAAxC;AACA,QAAMe,YAAY,GAAGzB,mBAAmB,CAAC;AACrC0B,IAAAA,MAAM,EAAEJ,aAD6B;AAErCK,IAAAA,yBAAyB,EAAE;AACvBC,MAAAA,IAAI,EAAE,CADiB;AAEvBC,MAAAA,OAAO,EAAE,CAFc;AAGvBC,MAAAA,QAAQ,EAAE,CAHa;AAIvBC,MAAAA,QAAQ,EAAE;AAJa,KAFU;AAQrCC,IAAAA,QAAQ,EAAE;AAR2B,GAAD,CAAxC;AAUA,MAAIP,YAAJ,EAAkB,OAAO;AAAErB,IAAAA,KAAK,EAAEqB,YAAT;AAAuBpB,IAAAA,iBAAiB,EAAE;AAA1C,GAAP;AAElB,SAAO;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,iBAAiB,EAAEiB;AAAnC,GAAP;AACH","sourcesContent":["import connectToDatabaseThen from \"../../utils/connectToDatabase\";\r\nimport checkFieldsValidity from \"../../utils/checkFieldsValidity\";\r\nimport escape from \"validator/lib/escape\";\r\n\r\nexport default (req, res) => {\r\n    const { error, validatedUserData } = validateUserData(req);\r\n    if (error) return res.status(500).json({ ok: false, error });\r\n    req.body = validatedUserData;\r\n\r\n    connectToDatabaseThen((db) => {\r\n        const users = db.collection(\"users\");\r\n\r\n        users.insertOne(req.body, (error) => {\r\n            if (error) {\r\n                console.error(error);\r\n                return res.status(500).json({ ok: false });\r\n            }\r\n\r\n            res.status(200).json({ ok: true });\r\n        });\r\n    });\r\n};\r\n\r\nfunction escapeRegisterData(userData) {\r\n    for (const [key, value] of Object.entries(userData))\r\n        userData[key] = escape(value);\r\n\r\n    return userData;\r\n}\r\n\r\nfunction validateUserData(req) {\r\n    const escapedFields = escapeRegisterData(JSON.parse(req.body));\r\n    const errorMessage = checkFieldsValidity({\r\n        fields: escapedFields,\r\n        minimumLengthForEachField: {\r\n            name: 3,\r\n            surname: 3,\r\n            username: 5,\r\n            password: 8,\r\n        },\r\n        hasEmail: true,\r\n    });\r\n    if (errorMessage) return { error: errorMessage, validatedUserData: {} };\r\n\r\n    return { error: false, validatedUserData: escapedFields };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}