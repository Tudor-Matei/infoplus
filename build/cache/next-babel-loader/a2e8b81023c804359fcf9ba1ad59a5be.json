{"ast":null,"code":"import isEmpty from \"validator/lib/isEmpty\";\nimport isEmail from \"validator/lib/isEmail\";\nexport default function checkFieldsValidity(_ref) {\n  var _ref$fields = _ref.fields,\n      fields = _ref$fields === void 0 ? {} : _ref$fields,\n      _ref$minimumLengthFor = _ref.minimumLengthForEachField,\n      minimumLengthForEachField = _ref$minimumLengthFor === void 0 ? {} : _ref$minimumLengthFor,\n      _ref$hasEmail = _ref.hasEmail,\n      hasEmail = _ref$hasEmail === void 0 ? false : _ref$hasEmail;\n  if (thereAreEmptyFields(Object.values(fields))) return \"Nu ai completat unul sau mai multe c창mpuri.\";else if (fieldValuesAreNotLongEnough(fields, minimumLengthForEachField)) return \"Unul sau mai multe c창mpuri nu indeplinesc numarul de caractere minim.\";else if (hasEmail && !isEmail(fields.email)) return \"E-mail-ul pe care l-ai introdus nu este valid.\";\n  return false;\n}\n\nfunction thereAreEmptyFields(fieldValues) {\n  return fieldValues.some(isEmpty);\n}\n\nfunction fieldValuesAreNotLongEnough(fields, minimumLengthForEachField) {\n  for (var _i = 0, _Object$keys = Object.keys(minimumLengthForEachField); _i < _Object$keys.length; _i++) {\n    var field = _Object$keys[_i];\n    if (fields[field].length < minimumLengthForEachField[field]) return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/utils/checkFieldsValidity.js"],"names":["isEmpty","isEmail","checkFieldsValidity","fields","minimumLengthForEachField","hasEmail","thereAreEmptyFields","Object","values","fieldValuesAreNotLongEnough","email","fieldValues","some","keys","field","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,mBAAT,OAIZ;AAAA,yBAHCC,MAGD;AAAA,MAHCA,MAGD,4BAHU,EAGV;AAAA,mCAFCC,yBAED;AAAA,MAFCA,yBAED,sCAF6B,EAE7B;AAAA,2BADCC,QACD;AAAA,MADCA,QACD,8BADY,KACZ;AACC,MAAIC,mBAAmB,CAACC,MAAM,CAACC,MAAP,CAAcL,MAAd,CAAD,CAAvB,EACI,OAAO,6CAAP,CADJ,KAEK,IAAIM,2BAA2B,CAACN,MAAD,EAASC,yBAAT,CAA/B,EACD,OAAO,uEAAP,CADC,KAEA,IAAIC,QAAQ,IAAI,CAACJ,OAAO,CAACE,MAAM,CAACO,KAAR,CAAxB,EACD,OAAO,gDAAP;AAEJ,SAAO,KAAP;AACH;;AAED,SAASJ,mBAAT,CAA6BK,WAA7B,EAA0C;AACtC,SAAOA,WAAW,CAACC,IAAZ,CAAiBZ,OAAjB,CAAP;AACH;;AAED,SAASS,2BAAT,CAAqCN,MAArC,EAA6CC,yBAA7C,EAAwE;AACpE,kCAAoBG,MAAM,CAACM,IAAP,CAAYT,yBAAZ,CAApB,kCAA4D;AAAvD,QAAMU,KAAK,mBAAX;AACD,QAAIX,MAAM,CAACW,KAAD,CAAN,CAAcC,MAAd,GAAuBX,yBAAyB,CAACU,KAAD,CAApD,EACI,OAAO,IAAP;AACP;;AACD,SAAO,KAAP;AACH","sourcesContent":["import isEmpty from \"validator/lib/isEmpty\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\n\r\nexport default function checkFieldsValidity({\r\n    fields = {},\r\n    minimumLengthForEachField = {},\r\n    hasEmail = false,\r\n}) {\r\n    if (thereAreEmptyFields(Object.values(fields)))\r\n        return \"Nu ai completat unul sau mai multe c창mpuri.\";\r\n    else if (fieldValuesAreNotLongEnough(fields, minimumLengthForEachField))\r\n        return \"Unul sau mai multe c창mpuri nu indeplinesc numarul de caractere minim.\";\r\n    else if (hasEmail && !isEmail(fields.email))\r\n        return \"E-mail-ul pe care l-ai introdus nu este valid.\";\r\n\r\n    return false;\r\n}\r\n\r\nfunction thereAreEmptyFields(fieldValues) {\r\n    return fieldValues.some(isEmpty);\r\n}\r\n\r\nfunction fieldValuesAreNotLongEnough(fields, minimumLengthForEachField) {\r\n    for (const field of Object.keys(minimumLengthForEachField)) {\r\n        if (fields[field].length < minimumLengthForEachField[field])\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}