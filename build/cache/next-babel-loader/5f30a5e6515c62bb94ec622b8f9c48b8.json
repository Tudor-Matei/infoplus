{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport isEmail from \"validator/lib/isEmail\";\nimport validateUserData from \"../../utils/validateUserData\";\nimport connectToDatabase from \"../../utils/connectToDatabase\";\nexport default (async (req, res) => {\n  if (!req.body) return res.status(204).end();\n  const {\n    error,\n    validatedUserData\n  } = validateUserData(req.body, {\n    minimumLengthForEachField: {\n      username: 5,\n      password: 8\n    }\n  });\n  console.log(req.body);\n  if (error) return res.status(403).json({\n    ok: false,\n    error\n  });\n  let closeConnection;\n\n  try {\n    const {\n      db,\n      closeConnectionHandler\n    } = await connectToDatabase();\n    closeConnection = closeConnectionHandler;\n    const foundUser = await db.collection(\"users\").findOne({\n      password: validatedUserData.password\n    });\n    console.log(foundUser);\n    if (!foundUser) res.status(403).json({\n      ok: false,\n      error: \"Datele pe care le-ați introdus nu au fost corecte.\"\n    });else res.status(200).json({\n      ok: true\n    });\n    return closeConnection();\n  } catch (e) {\n    if (closeConnection) closeConnection();\n    console.error(e);\n    return res.status(500).json({\n      ok: false\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/pages/api/login.js"],"names":["jwt","isEmail","validateUserData","connectToDatabase","req","res","body","status","end","error","validatedUserData","minimumLengthForEachField","username","password","console","log","json","ok","closeConnection","db","closeConnectionHandler","foundUser","collection","findOne","e"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe,OAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACf,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BR,gBAAgB,CAACE,GAAG,CAACE,IAAL,EAAW;AAC5DK,IAAAA,yBAAyB,EAAE;AACvBC,MAAAA,QAAQ,EAAE,CADa;AAEvBC,MAAAA,QAAQ,EAAE;AAFa;AADiC,GAAX,CAArD;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACE,IAAhB;AACA,MAAIG,KAAJ,EAAW,OAAOJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AAAEC,IAAAA,EAAE,EAAE,KAAN;AAAaR,IAAAA;AAAb,GAArB,CAAP;AAEX,MAAIS,eAAJ;;AACA,MAAI;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAiC,MAAMjB,iBAAiB,EAA9D;AACAe,IAAAA,eAAe,GAAGE,sBAAlB;AACA,UAAMC,SAAS,GAAG,MAAMF,EAAE,CACrBG,UADmB,CACR,OADQ,EAEnBC,OAFmB,CAEX;AAAEV,MAAAA,QAAQ,EAAEH,iBAAiB,CAACG;AAA9B,KAFW,CAAxB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,QAAI,CAACA,SAAL,EACIhB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AACjBC,MAAAA,EAAE,EAAE,KADa;AAEjBR,MAAAA,KAAK,EAAE;AAFU,KAArB,EADJ,KAKKJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB;AAEL,WAAOC,eAAe,EAAtB;AACH,GAfD,CAeE,OAAOM,CAAP,EAAU;AACR,QAAIN,eAAJ,EAAqBA,eAAe;AAEpCJ,IAAAA,OAAO,CAACL,KAAR,CAAce,CAAd;AACA,WAAOnB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB,CAAP;AACH;AACJ,CAjCD","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport validateUserData from \"../../utils/validateUserData\";\r\nimport connectToDatabase from \"../../utils/connectToDatabase\";\r\n\r\nexport default async (req, res) => {\r\n    if (!req.body) return res.status(204).end();\r\n    const { error, validatedUserData } = validateUserData(req.body, {\r\n        minimumLengthForEachField: {\r\n            username: 5,\r\n            password: 8,\r\n        },\r\n    });\r\n    console.log(req.body);\r\n    if (error) return res.status(403).json({ ok: false, error });\r\n\r\n    let closeConnection;\r\n    try {\r\n        const { db, closeConnectionHandler } = await connectToDatabase();\r\n        closeConnection = closeConnectionHandler;\r\n        const foundUser = await db\r\n            .collection(\"users\")\r\n            .findOne({ password: validatedUserData.password });\r\n        console.log(foundUser);\r\n        if (!foundUser)\r\n            res.status(403).json({\r\n                ok: false,\r\n                error: \"Datele pe care le-ați introdus nu au fost corecte.\",\r\n            });\r\n        else res.status(200).json({ ok: true });\r\n\r\n        return closeConnection();\r\n    } catch (e) {\r\n        if (closeConnection) closeConnection();\r\n\r\n        console.error(e);\r\n        return res.status(500).json({ ok: false });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}