{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport checkFieldsValidity from \"./checkFieldsValidity\";\nimport escape from \"validator/lib/escape\";\nexport default function validateUserData(body = {}, fieldOptions = {\n  minimumLengthForEachField: {},\n  hasEmail: false\n}) {\n  const escapedFields = escapeUserData(JSON.parse(body));\n  const errorMessage = checkFieldsValidity(_objectSpread({\n    fields: escapedFields\n  }, fieldOptions));\n  if (errorMessage) return {\n    error: errorMessage,\n    validatedUserData: {}\n  };\n  return {\n    error: null,\n    validatedUserData: escapedFields\n  };\n}\n\nfunction escapeUserData(userData) {\n  for (const [field, value] of Object.entries(userData)) userData[field] = escape(value);\n\n  return userData;\n}","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/utils/validateUserData.js"],"names":["checkFieldsValidity","escape","validateUserData","body","fieldOptions","minimumLengthForEachField","hasEmail","escapedFields","escapeUserData","JSON","parse","errorMessage","fields","error","validatedUserData","userData","field","value","Object","entries"],"mappings":";;;;;;AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,SAASC,gBAAT,CACXC,IAAI,GAAG,EADI,EAEXC,YAAY,GAAG;AAAEC,EAAAA,yBAAyB,EAAE,EAA7B;AAAiCC,EAAAA,QAAQ,EAAE;AAA3C,CAFJ,EAGb;AACE,QAAMC,aAAa,GAAGC,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAD,CAApC;AACA,QAAMQ,YAAY,GAAGX,mBAAmB;AACpCY,IAAAA,MAAM,EAAEL;AAD4B,KAEjCH,YAFiC,EAAxC;AAIA,MAAIO,YAAJ,EAAkB,OAAO;AAAEE,IAAAA,KAAK,EAAEF,YAAT;AAAuBG,IAAAA,iBAAiB,EAAE;AAA1C,GAAP;AAElB,SAAO;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,iBAAiB,EAAEP;AAAlC,GAAP;AACH;;AAED,SAASC,cAAT,CAAwBO,QAAxB,EAAkC;AAC9B,OAAK,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAX,IAA6BC,MAAM,CAACC,OAAP,CAAeJ,QAAf,CAA7B,EAAuDA,QAAQ,CAACC,KAAD,CAAR,GAAkBf,MAAM,CAACgB,KAAD,CAAxB;;AAEvD,SAAOF,QAAP;AACH","sourcesContent":["import checkFieldsValidity from \"./checkFieldsValidity\";\r\nimport escape from \"validator/lib/escape\";\r\n\r\nexport default function validateUserData(\r\n    body = {},\r\n    fieldOptions = { minimumLengthForEachField: {}, hasEmail: false }\r\n) {\r\n    const escapedFields = escapeUserData(JSON.parse(body));\r\n    const errorMessage = checkFieldsValidity({\r\n        fields: escapedFields,\r\n        ...fieldOptions,\r\n    });\r\n    if (errorMessage) return { error: errorMessage, validatedUserData: {} };\r\n\r\n    return { error: null, validatedUserData: escapedFields };\r\n}\r\n\r\nfunction escapeUserData(userData) {\r\n    for (const [field, value] of Object.entries(userData)) userData[field] = escape(value);\r\n\r\n    return userData;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}