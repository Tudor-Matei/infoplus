{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport \"../configs/icons\";\nimport Header from \"../components/_globals/Header\";\nimport Contact from \"../components/_globals/Contact\";\nimport Footer from \"../components/_globals/Footer\";\nimport mainStyling from \"../styles/mainStyling\";\nimport useComponentDidMount from \"../components/_hooks/componentDidMount\";\nimport LoadingBar from \"../components/_globals/LoadingBar\";\nvar ThemeContext = createContext(true);\nRouter.events.on(\"routeChangeStart\", loadingStart);\nRouter.events.on(\"routeChangeComplete\", loadingFinished);\nRouter.events.on(\"routeChangeError\", loadingFinished);\nexport default function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(true),\n      isLightTheme = _useState[0],\n      setTheme = _useState[1];\n\n  useComponentDidMount(function () {\n    var localTheme = window.localStorage.getItem(\"theme\") || (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\");\n    setTheme(localTheme === \"light\");\n  });\n  return __jsx(React.Fragment, null, __jsx(LoadingBar, null), __jsx(ThemeContext.Provider, {\n    value: {\n      isLightTheme: isLightTheme,\n      setTheme: setTheme\n    }\n  }, __jsx(Header, null)), __jsx(Component, _extends({}, pageProps, {\n    className: \"jsx-\".concat(mainStyling.__hash) + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\")\n  })), __jsx(Contact, null), __jsx(Footer, null), __jsx(_JSXStyle, {\n    id: mainStyling.__hash\n  }, mainStyling));\n}\nexport { ThemeContext };\n\nfunction loadingStart() {\n  var loadingBar = document.querySelector(\".loading-bar\");\n  loadingBar.classList.add(\"loading-bar--is-loading\");\n}\n\nfunction loadingFinished() {\n  var loadingBar = document.querySelector(\".loading-bar\");\n  if (loadingBar) loadingBar.classList.remove(\"loading-bar--is-loading\");\n}","map":null,"metadata":{},"sourceType":"module"}