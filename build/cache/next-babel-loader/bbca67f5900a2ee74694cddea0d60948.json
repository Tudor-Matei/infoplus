{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport isEmail from \"validator/lib/isEmail\";\nimport validateUserData from \"../../utils/validateUserData\";\nimport connectToDatabase from \"../../utils/connectToDatabase\";\nexport default (async (req, res) => {\n  if (!req.body) return res.status(204).end();\n  const {\n    error,\n    validatedUserData\n  } = validateUserData(req.body, {\n    minimumLengthForEachField: {\n      username: 5,\n      password: 8\n    },\n    hasEmail: isEmail(req.body.username)\n  });\n  if (error) return res.status(403).json({\n    ok: false,\n    error\n  });\n\n  try {\n    const {\n      db,\n      closeConnection\n    } = await connectToDatabase();\n    const users = db.collection(\"users\");\n    const foundUser = users.findOne({\n      password: validatedUserData.password\n    });\n    console.log(foundUser);\n    if (!foundUser) return res.status(403).json({\n      ok: false,\n      error: \"\"\n    });\n    return res.status(200).json({\n      ok: true\n    });\n  } catch (e) {\n    console.error(e);\n    return res.status(500).json({\n      ok: false\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/pages/api/login.js"],"names":["jwt","isEmail","validateUserData","connectToDatabase","req","res","body","status","end","error","validatedUserData","minimumLengthForEachField","username","password","hasEmail","json","ok","db","closeConnection","users","collection","foundUser","findOne","console","log","e"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe,OAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACf,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BR,gBAAgB,CAACE,GAAG,CAACE,IAAL,EAAW;AAC5DK,IAAAA,yBAAyB,EAAE;AACvBC,MAAAA,QAAQ,EAAE,CADa;AAEvBC,MAAAA,QAAQ,EAAE;AAFa,KADiC;AAK5DC,IAAAA,QAAQ,EAAEb,OAAO,CAACG,GAAG,CAACE,IAAJ,CAASM,QAAV;AAL2C,GAAX,CAArD;AAOA,MAAIH,KAAJ,EAAW,OAAOJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAAEC,IAAAA,EAAE,EAAE,KAAN;AAAaP,IAAAA;AAAb,GAArB,CAAP;;AAEX,MAAI;AACA,UAAM;AAAEQ,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAA0B,MAAMf,iBAAiB,EAAvD;AACA,UAAMgB,KAAK,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAd;AAEA,UAAMC,SAAS,GAAGF,KAAK,CAACG,OAAN,CAAc;AAAET,MAAAA,QAAQ,EAAEH,iBAAiB,CAACG;AAA9B,KAAd,CAAlB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,QAAI,CAACA,SAAL,EAAgB,OAAOhB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE,KAAN;AAAaP,MAAAA,KAAK,EAAE;AAApB,KAArB,CAAP;AAChB,WAAOJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB,CAAP;AACH,GATD,CASE,OAAOS,CAAP,EAAU;AACRF,IAAAA,OAAO,CAACd,KAAR,CAAcgB,CAAd;AACA,WAAOpB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB,CAAP;AACH;AACJ,CAxBD","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport validateUserData from \"../../utils/validateUserData\";\r\nimport connectToDatabase from \"../../utils/connectToDatabase\";\r\n\r\nexport default async (req, res) => {\r\n    if (!req.body) return res.status(204).end();\r\n    const { error, validatedUserData } = validateUserData(req.body, {\r\n        minimumLengthForEachField: {\r\n            username: 5,\r\n            password: 8,\r\n        },\r\n        hasEmail: isEmail(req.body.username),\r\n    });\r\n    if (error) return res.status(403).json({ ok: false, error });\r\n\r\n    try {\r\n        const { db, closeConnection } = await connectToDatabase();\r\n        const users = db.collection(\"users\");\r\n\r\n        const foundUser = users.findOne({ password: validatedUserData.password });\r\n        console.log(foundUser);\r\n\r\n        if (!foundUser) return res.status(403).json({ ok: false, error: \"\" });\r\n        return res.status(200).json({ ok: true });\r\n    } catch (e) {\r\n        console.error(e);\r\n        return res.status(500).json({ ok: false });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}