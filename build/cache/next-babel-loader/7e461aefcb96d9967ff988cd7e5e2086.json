{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport HeaderInfo from \"../../components/IndividualExercise/HeaderInfo\";\nimport ExerciseInfo from \"../../components/IndividualExercise/ExerciseInfo\";\nimport SolutionArea from \"../../components/IndividualExercise/SolutionArea\";\nimport Results from \"../../components/IndividualExercise/ResultsArea\";\nimport { useState } from \"react\";\nexport default function Exercitiu() {\n  //TODO: dati seama cum sa fie fetch aici, in functie de butonul \"trimite\"\n  //trebuie totusi sa astept dupa raspunsul de la server cand termina de compilat...\n  //websockets-ul ar fi un overkill.\n  //o idee naspa ar fi sa setez un timeout dupa care sa fac fetch.\n  const {\n    0: needsResultsComponent,\n    1: setResultsComponent\n  } = useState(true);\n\n  const toggleResultsComponent = () => setResultsComponent(!needsResultsComponent);\n\n  return __jsx(React.Fragment, null, __jsx(HeaderInfo, {\n    title: \"ScriereEcran\",\n    isSolved: true,\n    difficulty: 1,\n    authorName: \"Jane Doe\",\n    maxExecutionTime: 0.1,\n    maxMemoryConsumption: 4,\n    source: \"Model bacalaureat 2009\",\n    sentSolutions: 291\n  }), __jsx(ExerciseInfo, {\n    needsHint: true,\n    userSolutions: 2,\n    officialSolution: true,\n    dataInput: {\n      toInput: \"doua numere naturale a si b\",\n      toOutput: \"suma acestor numere\"\n    },\n    importantData: [\"un test\", \"doi testi\", \"trei tresti\", \"4 chestii\"],\n    inputExample: {\n      input: \"24 2\",\n      output: \"Test 1234 test test\"\n    }\n  }, \"Incididunt aute ex amet quis sint elit. Do mollit in Lorem eu proident elit cupidatat aliquip eu irure exercitation. Laborum ex minim nostrud duis cupidatat quis est proident et nulla deserunt sint Lorem. Eu exercitation sunt et incididunt eu nostrud ad ea velit tempor laborum. Mollit pariatur consectetur ad elit. Incididunt aute ex amet quis sint elit. Do mollit in Lorem eu proident elit cupidatat aliquip eu irure exercitation. Laborum ex minim nostrud duis cupidatat quis est proident et nulla deserunt sint Lorem. Eu exercitation sunt et incididunt eu nostrud ad ea velit tempor laborum. Mollit pariatur consectetur ad elit.\"), needsResultsComponent ?\n  /* \r\n  CODURI:\r\n  * -1 limita de timp\r\n  * -2 limita de memorie\r\n  * -3 alte erori\r\n  */\n  __jsx(Results, {\n    toggleResultsComponent: toggleResultsComponent,\n    totalPointsGained: 75,\n    testResults: [{\n      didPass: true,\n      timeTaken: 0.11,\n      memoryUsed: 0.25,\n      failureCode: null\n    }, {\n      didPass: false,\n      timeTaken: 0.11,\n      memoryUsed: 0.25,\n      failureCode: -1\n    }, {\n      didPass: true,\n      timeTaken: 0.11,\n      memoryUsed: 0.25,\n      failureCode: null\n    }, {\n      didPass: false,\n      timeTaken: 0.11,\n      memoryUsed: 0.25,\n      failureCode: -2\n    }, {\n      didPass: false,\n      timeTaken: 0.11,\n      memoryUsed: 0.25,\n      failureCode: -3\n    }]\n  }) : __jsx(SolutionArea, {\n    toggleResultsComponent: toggleResultsComponent\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}