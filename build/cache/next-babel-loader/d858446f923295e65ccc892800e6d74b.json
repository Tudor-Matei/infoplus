{"ast":null,"code":"import isEmailValid from \"./isEmailValid\";\nexport default function checkFieldsValidity({\n  fields = {},\n  minimumLengthForEachField = {},\n  hasEmail = false\n}) {\n  const fieldValues = Object.values(fields);\n  if (thereAreEmptyFields(fieldValues)) return \"Nu ai completat unul sau mai multe c창mpuri.\";else if (fieldValuesAreNotLongEnough(fields, minimumLengthForEachField)) return \"Unul sau mai multe c창mpuri nu indeplinesc numarul de caractere minim.\";else if (hasEmail && !isEmailValid(fields.email)) return \"E-mail-ul pe care l-ai introdus nu este valid.\";\n  return false;\n}\n\nfunction thereAreEmptyFields(fieldValues) {\n  return fieldValues.some(fieldValue => fieldValue.trim() === \"\");\n}\n\nfunction fieldValuesAreNotLongEnough(fields, minimumLengthForEachField) {\n  for (const field of Object.keys(minimumLengthForEachField)) {\n    if (fields[field].length < minimumLengthForEachField[field]) return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/utils/checkFieldsValidity.js"],"names":["isEmailValid","checkFieldsValidity","fields","minimumLengthForEachField","hasEmail","fieldValues","Object","values","thereAreEmptyFields","fieldValuesAreNotLongEnough","email","some","fieldValue","trim","field","keys","length"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,eAAe,SAASC,mBAAT,CAA6B;AACxCC,EAAAA,MAAM,GAAG,EAD+B;AAExCC,EAAAA,yBAAyB,GAAG,EAFY;AAGxCC,EAAAA,QAAQ,GAAG;AAH6B,CAA7B,EAIZ;AACC,QAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcL,MAAd,CAApB;AAEA,MAAIM,mBAAmB,CAACH,WAAD,CAAvB,EACI,OAAO,6CAAP,CADJ,KAEK,IAAII,2BAA2B,CAACP,MAAD,EAASC,yBAAT,CAA/B,EACD,OAAO,uEAAP,CADC,KAEA,IAAIC,QAAQ,IAAI,CAACJ,YAAY,CAACE,MAAM,CAACQ,KAAR,CAA7B,EACD,OAAO,gDAAP;AAEJ,SAAO,KAAP;AACH;;AAED,SAASF,mBAAT,CAA6BH,WAA7B,EAA0C;AACtC,SAAOA,WAAW,CAACM,IAAZ,CAAkBC,UAAD,IAAgBA,UAAU,CAACC,IAAX,OAAsB,EAAvD,CAAP;AACH;;AAED,SAASJ,2BAAT,CAAqCP,MAArC,EAA6CC,yBAA7C,EAAwE;AACpE,OAAK,MAAMW,KAAX,IAAoBR,MAAM,CAACS,IAAP,CAAYZ,yBAAZ,CAApB,EAA4D;AACxD,QAAID,MAAM,CAACY,KAAD,CAAN,CAAcE,MAAd,GAAuBb,yBAAyB,CAACW,KAAD,CAApD,EACI,OAAO,IAAP;AACP;;AACD,SAAO,KAAP;AACH","sourcesContent":["import isEmailValid from \"./isEmailValid\";\r\nexport default function checkFieldsValidity({\r\n    fields = {},\r\n    minimumLengthForEachField = {},\r\n    hasEmail = false,\r\n}) {\r\n    const fieldValues = Object.values(fields);\r\n\r\n    if (thereAreEmptyFields(fieldValues))\r\n        return \"Nu ai completat unul sau mai multe c창mpuri.\";\r\n    else if (fieldValuesAreNotLongEnough(fields, minimumLengthForEachField))\r\n        return \"Unul sau mai multe c창mpuri nu indeplinesc numarul de caractere minim.\";\r\n    else if (hasEmail && !isEmailValid(fields.email))\r\n        return \"E-mail-ul pe care l-ai introdus nu este valid.\";\r\n\r\n    return false;\r\n}\r\n\r\nfunction thereAreEmptyFields(fieldValues) {\r\n    return fieldValues.some((fieldValue) => fieldValue.trim() === \"\");\r\n}\r\n\r\nfunction fieldValuesAreNotLongEnough(fields, minimumLengthForEachField) {\r\n    for (const field of Object.keys(minimumLengthForEachField)) {\r\n        if (fields[field].length < minimumLengthForEachField[field])\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}