{"ast":null,"code":"import connectToDatabase from \"../../utils/connectToDatabase\";\nimport validateUserData from \"../../utils/validateUserData\";\nimport bcrypt from \"bcrypt\";\nconst SALT_ROUNDS = 10;\nexport default (async (req, res) => {\n  if (!req.body) return res.status(204).end();\n  const {\n    error,\n    validatedUserData\n  } = validateUserData(req.body, {\n    minimumLengthForEachField: {\n      name: 3,\n      surname: 3,\n      username: 5,\n      password: 8\n    },\n    hasEmail: true\n  });\n  if (error) return res.status(403).json({\n    ok: false,\n    error\n  });\n  validatedUserData.refreshToken = \"\";\n\n  try {\n    validatedUserData.password = await bcrypt.hash(validatedUserData.password, SALT_ROUNDS);\n    const {\n      db,\n      closeConnection\n    } = await connectToDatabase();\n    const users = db.collection(\"users\");\n    await users.insertOne(validatedUserData);\n    res.status(200).json({\n      ok: true\n    });\n    return closeConnection();\n  } catch (e) {\n    console.error(e);\n    return res.status(500).json({\n      ok: false\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/pages/api/register.js"],"names":["connectToDatabase","validateUserData","bcrypt","SALT_ROUNDS","req","res","body","status","end","error","validatedUserData","minimumLengthForEachField","name","surname","username","password","hasEmail","json","ok","refreshToken","hash","db","closeConnection","users","collection","insertOne","e","console"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,WAAW,GAAG,EAApB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe,OAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACf,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BT,gBAAgB,CAACG,GAAG,CAACE,IAAL,EAAW;AAC5DK,IAAAA,yBAAyB,EAAE;AACvBC,MAAAA,IAAI,EAAE,CADiB;AAEvBC,MAAAA,OAAO,EAAE,CAFc;AAGvBC,MAAAA,QAAQ,EAAE,CAHa;AAIvBC,MAAAA,QAAQ,EAAE;AAJa,KADiC;AAO5DC,IAAAA,QAAQ,EAAE;AAPkD,GAAX,CAArD;AASA,MAAIP,KAAJ,EAAW,OAAOJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AAAEC,IAAAA,EAAE,EAAE,KAAN;AAAaT,IAAAA;AAAb,GAArB,CAAP;AACXC,EAAAA,iBAAiB,CAACS,YAAlB,GAAiC,EAAjC;;AAEA,MAAI;AACAT,IAAAA,iBAAiB,CAACK,QAAlB,GAA6B,MAAMb,MAAM,CAACkB,IAAP,CAAYV,iBAAiB,CAACK,QAA9B,EAAwCZ,WAAxC,CAAnC;AACA,UAAM;AAAEkB,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAA0B,MAAMtB,iBAAiB,EAAvD;AACA,UAAMuB,KAAK,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAd;AAEA,UAAMD,KAAK,CAACE,SAAN,CAAgBf,iBAAhB,CAAN;AACAL,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB;AAEA,WAAOI,eAAe,EAAtB;AACH,GATD,CASE,OAAOI,CAAP,EAAU;AACRC,IAAAA,OAAO,CAAClB,KAAR,CAAciB,CAAd;AACA,WAAOrB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAArB,CAAP;AACH;AACJ,CA3BD","sourcesContent":["import connectToDatabase from \"../../utils/connectToDatabase\";\r\nimport validateUserData from \"../../utils/validateUserData\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nconst SALT_ROUNDS = 10;\r\n\r\nexport default async (req, res) => {\r\n    if (!req.body) return res.status(204).end();\r\n    const { error, validatedUserData } = validateUserData(req.body, {\r\n        minimumLengthForEachField: {\r\n            name: 3,\r\n            surname: 3,\r\n            username: 5,\r\n            password: 8,\r\n        },\r\n        hasEmail: true,\r\n    });\r\n    if (error) return res.status(403).json({ ok: false, error });\r\n    validatedUserData.refreshToken = \"\";\r\n\r\n    try {\r\n        validatedUserData.password = await bcrypt.hash(validatedUserData.password, SALT_ROUNDS);\r\n        const { db, closeConnection } = await connectToDatabase();\r\n        const users = db.collection(\"users\");\r\n\r\n        await users.insertOne(validatedUserData);\r\n        res.status(200).json({ ok: true });\r\n\r\n        return closeConnection();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return res.status(500).json({ ok: false });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}