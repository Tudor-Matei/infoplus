{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plesa\\\\Desktop\\\\Proiecte Web\\\\infoplus\\\\pages\\\\_app.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport \"../configs/icons\";\nimport Header from \"../components/_globals/Header\";\nimport Contact from \"../components/_globals/Contact\";\nimport Footer from \"../components/_globals/Footer\";\nimport mainStyling from \"../styles/mainStyling\";\nimport useComponentDidMount from \"../components/_hooks/componentDidMount\";\nimport LoadingBar from \"../components/_globals/LoadingBar\";\nconst ThemeContext = createContext(true);\nconst ShowNotificationContext = createContext(null);\nimport AlertNotification from \"../components/_globals/AlertNotification\";\nRouter.events.on(\"routeChangeStart\", loadingStart);\nRouter.events.on(\"routeChangeComplete\", loadingFinished);\nRouter.events.on(\"routeChangeError\", loadingFinished);\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const {\n    0: isLightTheme,\n    1: setTheme\n  } = useState(true);\n  useComponentDidMount(() => {\n    const localTheme = window.localStorage.getItem(\"theme\") || (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\");\n    setTheme(localTheme === \"light\");\n  });\n  const {\n    0: alert,\n    1: modifyAlert\n  } = useState({\n    isVisible: false,\n    props: {\n      type: 1,\n      children: \"\"\n    }\n  });\n  return __jsx(React.Fragment, null, alert.isVisible && __jsx(AlertNotification, {\n    type: alert.props.type,\n    alertToggleHandler: () => modifyAlert(_objectSpread({}, alert, {\n      isVisible: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, alert.props.children), __jsx(LoadingBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(ThemeContext.Provider, {\n    value: {\n      isLightTheme,\n      setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), __jsx(ShowNotificationContext.Provider, {\n    value: modifyAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    className: `jsx-${mainStyling.__hash}` + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }))), __jsx(Contact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: mainStyling.__hash,\n    __self: this\n  }, mainStyling));\n}\nexport { ThemeContext, ShowNotificationContext };\n\nfunction loadingStart() {\n  const loadingBar = document.querySelector(\".loading-bar\");\n  loadingBar.classList.add(\"loading-bar--is-loading\");\n}\n\nfunction loadingFinished() {\n  const loadingBar = document.querySelector(\".loading-bar\");\n  if (loadingBar) loadingBar.classList.remove(\"loading-bar--is-loading\");\n}","map":{"version":3,"sources":["C:/Users/plesa/Desktop/Proiecte Web/infoplus/pages/_app.js"],"names":["createContext","useState","Router","Header","Contact","Footer","mainStyling","useComponentDidMount","LoadingBar","ThemeContext","ShowNotificationContext","AlertNotification","events","on","loadingStart","loadingFinished","App","Component","pageProps","isLightTheme","setTheme","localTheme","window","localStorage","getItem","matchMedia","matches","alert","modifyAlert","isVisible","props","type","children","loadingBar","document","querySelector","classList","add","remove"],"mappings":"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","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport Router from \"next/router\";\r\nimport \"../configs/icons\";\r\n\r\nimport Header from \"../components/_globals/Header\";\r\nimport Contact from \"../components/_globals/Contact\";\r\nimport Footer from \"../components/_globals/Footer\";\r\nimport mainStyling from \"../styles/mainStyling\";\r\nimport useComponentDidMount from \"../components/_hooks/componentDidMount\";\r\nimport LoadingBar from \"../components/_globals/LoadingBar\";\r\nconst ThemeContext = createContext(true);\r\nconst ShowNotificationContext = createContext(null);\r\nimport AlertNotification from \"../components/_globals/AlertNotification\";\r\n\r\nRouter.events.on(\"routeChangeStart\", loadingStart);\r\nRouter.events.on(\"routeChangeComplete\", loadingFinished);\r\nRouter.events.on(\"routeChangeError\", loadingFinished);\r\n\r\nexport default function App({ Component, pageProps }) {\r\n    const [isLightTheme, setTheme] = useState(true);\r\n    useComponentDidMount(() => {\r\n        const localTheme =\r\n            window.localStorage.getItem(\"theme\") ||\r\n            (window.matchMedia &&\r\n            window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n                ? \"dark\"\r\n                : \"light\");\r\n\r\n        setTheme(localTheme === \"light\");\r\n    });\r\n\r\n    const [alert, modifyAlert] = useState({\r\n        isVisible: false,\r\n        props: { type: 1, children: \"\" },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {alert.isVisible && (\r\n                <AlertNotification\r\n                    type={alert.props.type}\r\n                    alertToggleHandler={() =>\r\n                        modifyAlert({ ...alert, isVisible: false })\r\n                    }\r\n                >\r\n                    {alert.props.children}\r\n                </AlertNotification>\r\n            )}\r\n            <LoadingBar />\r\n            <ThemeContext.Provider value={{ isLightTheme, setTheme }}>\r\n                <Header />\r\n            </ThemeContext.Provider>\r\n\r\n            <ShowNotificationContext.Provider value={modifyAlert}>\r\n                <Component {...pageProps} />\r\n            </ShowNotificationContext.Provider>\r\n\r\n            <Contact />\r\n            <Footer />\r\n            <style jsx>{mainStyling}</style>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThemeContext, ShowNotificationContext };\r\n\r\nfunction loadingStart() {\r\n    const loadingBar = document.querySelector(\".loading-bar\");\r\n    loadingBar.classList.add(\"loading-bar--is-loading\");\r\n}\r\n\r\nfunction loadingFinished() {\r\n    const loadingBar = document.querySelector(\".loading-bar\");\r\n    if (loadingBar) loadingBar.classList.remove(\"loading-bar--is-loading\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}