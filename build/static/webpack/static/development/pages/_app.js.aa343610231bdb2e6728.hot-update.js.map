{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.aa343610231bdb2e6728.hot-update.js","sources":["webpack:///./components/_globals/DropdownMenu.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nimport { light, dark } from \"../../styles/theme\";\r\nimport { ThemeContext } from \"../../pages/_app\";\r\n\r\nexport default function DropdownMenu({ isDropdownToggled }) {\r\n    return (\r\n        <>\r\n            <div\r\n                className={`dropdown-menu-header ${\r\n                    isDropdownToggled ? \"dropdown-menu-header--active \" : \"\"\r\n                }`}\r\n            >\r\n                <DropdownMenuUl />\r\n                <ThemeConsumer Component={ThemeStyleSheet} />\r\n            </div>\r\n            <style jsx global>{`\r\n                .dropdown-menu-header {\r\n                    width: 220px;\r\n                    height: calc(100vh - 60px);\r\n                    position: fixed;\r\n                    right: 0;\r\n                    bottom: 0;\r\n                    background-color: var(--background-secondary);\r\n                    z-index: -1;\r\n                    box-shadow: -12px 13px 9px rgba(0, 0, 0, 0.1);\r\n                    overflow-y: auto;\r\n                    padding-top: 30px;\r\n                    transform: translateX(230px) translateZ(0);\r\n                    transition: color, background-color, transform 300ms ease;\r\n                }\r\n\r\n                .dropdown-menu-header--active {\r\n                    transform: translateX(0);\r\n                }\r\n            `}</style>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DropdownMenuUl() {\r\n    return (\r\n        <>\r\n            <ul className=\"dropdown-menu-header__ul\">\r\n                <Link href=\"/exercitii\">\r\n                    <li className=\"dropdown-menu-header__main-li\">Exercitii</li>\r\n                </Link>\r\n                <hr className=\"dropdown-menu-header__hr\" />\r\n                <DropdownMenuAccordion title=\"Resurse\">\r\n                    {[\r\n                        { titleLi: \"Clasa IX\", href: \"/resurse/ix\" },\r\n                        { titleLi: \"Clasa X\", href: \"/resurse/x\" },\r\n                        { titleLi: \"Clasa XI\", href: \"/resurse/xi\" },\r\n                    ]}\r\n                </DropdownMenuAccordion>\r\n                <hr className=\"dropdown-menu-header__hr\" />\r\n                <ThemeConsumer Component={ThemeChangerButton} />\r\n                <hr className=\"dropdown-menu-header__hr\" />\r\n                <li className=\"dropdown-menu-header__main-li\">Mod proiector</li>\r\n                <hr className=\"dropdown-menu-header__hr\" />\r\n                <Link href=\"/cont\">\r\n                    <li className=\"dropdown-menu-header__main-li\">Detalii cont</li>\r\n                </Link>\r\n            </ul>\r\n            <style jsx>{`\r\n                .dropdown-menu-header__hr {\r\n                    width: 85%;\r\n                }\r\n\r\n                .dropdown-menu-header__ul {\r\n                    padding-top: 0;\r\n                    padding-left: 5px;\r\n                    list-style-type: none;\r\n                }\r\n\r\n                :global(.dropdown-menu-header__main-li) {\r\n                    font-weight: bold;\r\n                    font-size: var(--font-small);\r\n                    cursor: pointer;\r\n                    position: relative;\r\n                    padding: 10px 0 10px 15px;\r\n                    user-select: none;\r\n                }\r\n\r\n                :global(.dropdown-menu-header__main-li:hover, .dropdown-menu-header__secondary-li:hover) {\r\n                    background-color: var(--background-primary);\r\n                    transition: background-color 300ms ease;\r\n                }\r\n\r\n                :global(.dropdown-menu-header__main-li:hover::before, .dropdown-menu-header__secondary-li:hover::before) {\r\n                    content: \"\";\r\n                    width: 5px;\r\n                    height: 100%;\r\n                    background-color: var(--accent-primary);\r\n                    transition: background-color 300ms ease;\r\n                    position: absolute;\r\n                    left: 0;\r\n                    top: 0;\r\n                }\r\n            `}</style>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DropdownMenuAccordion({ title, children }) {\r\n    const [isToggled, toggle] = useState(false);\r\n    const toggleDropdown = () => toggle(!isToggled);\r\n\r\n    return (\r\n        <div className=\"dropdown-menu-header__option-dropdown\">\r\n            <li onClick={toggleDropdown} className=\"dropdown-menu-header__main-li\">\r\n                {title}\r\n                <FontAwesomeIcon\r\n                    icon=\"angle-down\"\r\n                    color=\"2A2A2A\"\r\n                    className={`dropdown-menu-header__icon ${\r\n                        isToggled ? \"dropdown-menu-header__icon--active\" : \"\"\r\n                    }`}\r\n                />\r\n            </li>\r\n            <div\r\n                className={`dropdown-menu-header__content ${\r\n                    isToggled ? \"dropdown-menu-header__content--active\" : \"\"\r\n                }`}\r\n            >\r\n                <ul className=\"dropdown-menu-header__content-ul\">\r\n                    {children.map(({ titleLi = \"\", href = \"\" }, i) => (\r\n                        <Link href={href} key={`child_link-${i}-${href}`}>\r\n                            <li\r\n                                className=\"dropdown-menu-header__secondary-li\"\r\n                                key={`child_li-${i}`}\r\n                            >\r\n                                {titleLi}\r\n                            </li>\r\n                        </Link>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <style jsx global>{`\r\n                .dropdown-menu-header__secondary-li {\r\n                    padding: 10px 0;\r\n                    font-size: var(--font-smaller);\r\n                    cursor: pointer;\r\n                    position: relative;\r\n                    padding-left: 20px;\r\n                }\r\n\r\n                .dropdown-menu-header__content-ul {\r\n                    list-style-type: none;\r\n                    padding-left: 0;\r\n                }\r\n\r\n                .dropdown-menu-header__option-dropdown {\r\n                    overflow: hidden;\r\n                }\r\n\r\n                .dropdown-menu-header__content {\r\n                    margin-left: 20px;\r\n                    height: 0;\r\n                    transition: height 300ms ease;\r\n                }\r\n\r\n                .dropdown-menu-header__content--active {\r\n                    height: 140px;\r\n                }\r\n\r\n                .dropdown-menu-header__icon {\r\n                    margin-left: 20px;\r\n                    transition: transform 300ms ease;\r\n                }\r\n                .dropdown-menu-header__icon--active {\r\n                    transform: rotateZ(180deg);\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ThemeConsumer({ Component }) {\r\n    return (\r\n        <ThemeContext.Consumer>\r\n            {({ isLightTheme, setTheme }) => {\r\n                return <Component isLightTheme={isLightTheme} setTheme={setTheme} />;\r\n            }}\r\n        </ThemeContext.Consumer>\r\n    );\r\n}\r\n\r\nfunction ThemeStyleSheet({ isLightTheme }) {\r\n    const currentTheme = isLightTheme ? light : dark;\r\n    return (\r\n        <style jsx global>\r\n            {currentTheme}\r\n        </style>\r\n    );\r\n}\r\n\r\nfunction ThemeChangerButton({ isLightTheme, setTheme }) {\r\n    const changeTheme = () => {\r\n        setTheme(!isLightTheme);\r\n        window.localStorage.setItem(\"theme\", !isLightTheme ? \"light\" : \"dark\");\r\n    };\r\n    return (\r\n        <li className=\"dropdown-menu-header__main-li\" onClick={changeTheme}>\r\n            Tema {isLightTheme ? \"Intunecata\" : \"Luminoasa\"}\r\n        </li>\r\n    );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AA+BA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AA4DA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AAAA;AAAA;AAmEA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}