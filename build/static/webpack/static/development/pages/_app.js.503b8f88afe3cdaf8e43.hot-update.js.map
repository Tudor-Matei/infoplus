{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.503b8f88afe3cdaf8e43.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport Router from \"next/router\";\r\nimport useComponentDidMount from \"../components/_hooks/componentDidMount\";\r\n\r\nimport \"../configs/icons\";\r\nimport mainStyling from \"../styles/mainStyling\";\r\n\r\nimport Header from \"../components/_globals/Header\";\r\nimport Contact from \"../components/_globals/Contact\";\r\nimport Footer from \"../components/_globals/Footer\";\r\n\r\nimport AlertNotification from \"../components/_globals/AlertNotification\";\r\nimport LoadingBar from \"../components/_globals/LoadingBar\";\r\n\r\nconst ThemeContext = createContext(true);\r\nconst ShowAlertContext = createContext(null);\r\n\r\nRouter.events.on(\"routeChangeStart\", loadingStart);\r\nRouter.events.on(\"routeChangeComplete\", loadingFinished);\r\nRouter.events.on(\"routeChangeError\", loadingFinished);\r\n\r\nexport default function App({ Component, pageProps }) {\r\n    const [isLightTheme, setTheme] = useState(true);\r\n    useComponentDidMount(() => {\r\n        const localTheme =\r\n            window.localStorage.getItem(\"theme\") ||\r\n            (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n                ? \"dark\"\r\n                : \"light\");\r\n\r\n        setTheme(localTheme === \"light\");\r\n    });\r\n\r\n    const [alert, modifyAlert] = useState({\r\n        isVisible: false,\r\n        props: { type: 1, children: \"\" },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {alert.isVisible && (\r\n                <AlertNotification\r\n                    type={alert.props.type}\r\n                    alertToggleHandler={() => modifyAlert({ ...alert, isVisible: false })}\r\n                >\r\n                    {alert.props.children}\r\n                </AlertNotification>\r\n            )}\r\n            <LoadingBar />\r\n            <ThemeContext.Provider value={{ isLightTheme, setTheme }}>\r\n                <Header />\r\n            </ThemeContext.Provider>\r\n\r\n            <ShowAlertContext.Provider value={modifyAlert}>\r\n                <Component {...pageProps} />\r\n            </ShowAlertContext.Provider>\r\n\r\n            <Contact />\r\n            <Footer />\r\n            <style jsx>{mainStyling}</style>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { ThemeContext, ShowAlertContext };\r\n\r\nfunction loadingStart() {\r\n    const loadingBar = document.querySelector(\".loading-bar\");\r\n    loadingBar.classList.add(\"loading-bar--is-loading\");\r\n}\r\n\r\nfunction loadingFinished() {\r\n    const loadingBar = document.querySelector(\".loading-bar\");\r\n    if (loadingBar) loadingBar.classList.remove(\"loading-bar--is-loading\");\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AAXA;AAaA;AACA;AAAA;AAAA;AAAA;AAFA;AAZA;AAAA;AACA;AAgBA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAuBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}