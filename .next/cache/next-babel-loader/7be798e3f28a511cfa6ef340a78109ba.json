{"ast":null,"code":"import { MongoClient } from \"mongodb\";\nimport dbConfig from \"../../util/dbConfig\";\nexport default ((req, res) => {\n  const {\n    author\n  } = req.body;\n  MongoClient.connect(dbConfig.dbURI, {\n    useUnifiedTopology: true\n  }, (error, client) => {\n    if (error) throw error;\n    const db = client.db(dbConfig.dbName);\n    console.log(\"connected to the server!\");\n    db.collection(\"quotes\").updateOne({\n      author: \"MWR\"\n    }, {\n      $set: {\n        author\n      }\n    }).then(res.status(200).json).catch(console.error);\n    client.close().then(() => console.log(\"connection closed.\")).catch(console.error);\n  });\n});","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/pages/api/db.js"],"names":["MongoClient","dbConfig","req","res","author","body","connect","dbURI","useUnifiedTopology","error","client","db","dbName","console","log","collection","updateOne","$set","then","status","json","catch","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAG,CAACG,IAAvB;AACAL,EAAAA,WAAW,CAACM,OAAZ,CACEL,QAAQ,CAACM,KADX,EAEE;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAFF,EAGE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjB,QAAID,KAAJ,EAAW,MAAMA,KAAN;AACX,UAAME,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAUV,QAAQ,CAACW,MAAnB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAH,IAAAA,EAAE,CAACI,UAAH,CAAc,QAAd,EACGC,SADH,CAEI;AAAEZ,MAAAA,MAAM,EAAE;AAAV,KAFJ,EAGI;AACEa,MAAAA,IAAI,EAAE;AACJb,QAAAA;AADI;AADR,KAHJ,EASGc,IATH,CASQf,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IATxB,EAUGC,KAVH,CAUSR,OAAO,CAACJ,KAVjB;AAYAC,IAAAA,MAAM,CACHY,KADH,GAEGJ,IAFH,CAEQ,MAAML,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAFd,EAGGO,KAHH,CAGSR,OAAO,CAACJ,KAHjB;AAID,GAvBH;AAyBD,CA3BD","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport dbConfig from \"../../util/dbConfig\";\r\n\r\nexport default (req, res) => {\r\n  const { author } = req.body;\r\n  MongoClient.connect(\r\n    dbConfig.dbURI,\r\n    { useUnifiedTopology: true },\r\n    (error, client) => {\r\n      if (error) throw error;\r\n      const db = client.db(dbConfig.dbName);\r\n      console.log(\"connected to the server!\");\r\n      db.collection(\"quotes\")\r\n        .updateOne(\r\n          { author: \"MWR\" },\r\n          {\r\n            $set: {\r\n              author\r\n            }\r\n          }\r\n        )\r\n        .then(res.status(200).json)\r\n        .catch(console.error);\r\n\r\n      client\r\n        .close()\r\n        .then(() => console.log(\"connection closed.\"))\r\n        .catch(console.error);\r\n    }\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}