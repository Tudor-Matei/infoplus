{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tudor\\\\Desktop\\\\Proiecte Web\\\\infoplus\\\\pages\\\\about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nexport default function About() {\n  var _useState = useState({\n    name: \"\",\n    email: \"\"\n  }),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(input);\n  }\n\n  var inputs = [\"name\", \"email\"];\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, inputs.map(function (purpose, i) {\n    return __jsx(\"input\", {\n      key: \"input_\".concat(i),\n      type: \"text\",\n      placeholder: purpose,\n      onChange: function onChange(e) {\n        return setInput(_objectSpread({}, input, {\n          purpose: e.currentTarget.value\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/pages/about.js"],"names":["useState","About","name","email","input","setInput","onSubmit","e","preventDefault","console","log","inputs","map","purpose","i","currentTarget","value"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACJD,QAAQ,CAAC;AACjCE,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CADJ;AAAA,MACvBC,KADuB;AAAA,MAChBC,QADgB;;AAM9B,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD;;AACD,MAAMO,MAAM,GAAG,CAAC,MAAD,EAAS,OAAT,CAAf;AACA,SACE,4BACE;AAAM,IAAA,QAAQ,EAAEL,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACC,GAAP,CAAW,UAACC,OAAD,EAAUC,CAAV;AAAA,WACV;AACE,MAAA,GAAG,kBAAWA,CAAX,CADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAED,OAHf;AAIE,MAAA,QAAQ,EAAE,kBAAAN,CAAC;AAAA,eACTF,QAAQ,mBAAMD,KAAN;AAAaS,UAAAA,OAAO,EAAEN,CAAC,CAACQ,aAAF,CAAgBC;AAAtC,WADC;AAAA,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,EAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF,CADF;AAiBD","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(input);\r\n  }\r\n  const inputs = [\"name\", \"email\"];\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        {inputs.map((purpose, i) => (\r\n          <input\r\n            key={`input_${i}`}\r\n            type=\"text\"\r\n            placeholder={purpose}\r\n            onChange={e =>\r\n              setInput({ ...input, purpose: e.currentTarget.value })\r\n            }\r\n          />\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}