{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tudor\\\\Desktop\\\\Proiecte Web\\\\infoplus\\\\pages\\\\database.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nexport default function Database() {\n  const {\n    data,\n    error\n  } = useSWR(\"/api/db\", url => fetch(url).then(r => r.json()));\n  console.log(data);\n  if (error) throw error;\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Content: \", data && data.content || \"Loading...\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Author: \", data && data.author || \"Loading...\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Date: \", data && data.date || \"Loading...\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"db details\"));\n}","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/pages/database.js"],"names":["useSWR","Database","data","error","url","fetch","then","r","json","console","log","content","author","date"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,MAAM,CAAC,SAAD,EAAYI,GAAG,IAC3CC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAD4B,CAA9B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,MAAIC,KAAJ,EAAW,MAAMA,KAAN;AACX,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeD,IAAI,IAAIA,IAAI,CAACS,OAAd,IAA0B,YAAxC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcT,IAAI,IAAIA,IAAI,CAACU,MAAd,IAAyB,YAAtC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYV,IAAI,IAAIA,IAAI,CAACW,IAAd,IAAuB,YAAlC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF;AAQD","sourcesContent":["import useSWR from \"swr\";\r\n\r\nexport default function Database() {\r\n  const { data, error } = useSWR(\"/api/db\", url =>\r\n    fetch(url).then(r => r.json())\r\n  );\r\n  console.log(data);\r\n  if (error) throw error;\r\n  return (\r\n    <>\r\n      <h2>Content: {(data && data.content) || \"Loading...\"}</h2>\r\n      <h2>Author: {(data && data.author) || \"Loading...\"}</h2>\r\n      <h2>Date: {(data && data.date) || \"Loading...\"}</h2>\r\n      <h1>db details</h1>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}