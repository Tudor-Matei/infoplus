{"ast":null,"code":"import { MongoClient } from \"mongodb\";\nimport dbConfig from \"../../util/dbConfig\"; //TODO: vezi de ce se tot conecteaza dijaba la server\n\nexport default ((req, res) => {\n  MongoClient.connect(dbConfig.dbURI, (error, client) => {\n    if (error) throw error;\n\n    try {\n      const db = client.db(dbConfig.dbName);\n      console.log(\"connected to the server!\");\n      const queryResult = db.collection(\"quotes\").findOne({\n        author: \"MWR\"\n      }).then(res.status(200).json).catch(console.error);\n      console.log(queryResult);\n      client.close().then(() => console.log(\"connection closed.\")).catch(console.error);\n    } catch (err) {\n      return console.error(err);\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/pages/api/db.js"],"names":["MongoClient","dbConfig","req","res","connect","dbURI","error","client","db","dbName","console","log","queryResult","collection","findOne","author","then","status","json","catch","close","err"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;AACA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3BH,EAAAA,WAAW,CAACI,OAAZ,CAAoBH,QAAQ,CAACI,KAA7B,EAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD,QAAID,KAAJ,EAAW,MAAMA,KAAN;;AACX,QAAI;AACF,YAAME,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAUP,QAAQ,CAACQ,MAAnB,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,YAAMC,WAAW,GAAGJ,EAAE,CACnBK,UADiB,CACN,QADM,EAEjBC,OAFiB,CAET;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFS,EAGjBC,IAHiB,CAGZb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAHJ,EAIjBC,KAJiB,CAIXT,OAAO,CAACJ,KAJG,CAApB;AAMAI,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAL,MAAAA,MAAM,CACHa,KADH,GAEGJ,IAFH,CAEQ,MAAMN,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAFd,EAGGQ,KAHH,CAGST,OAAO,CAACJ,KAHjB;AAID,KAdD,CAcE,OAAOe,GAAP,EAAY;AACZ,aAAOX,OAAO,CAACJ,KAAR,CAAce,GAAd,CAAP;AACD;AACF,GAnBD;AAoBD,CArBD","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport dbConfig from \"../../util/dbConfig\";\r\n//TODO: vezi de ce se tot conecteaza dijaba la server\r\nexport default (req, res) => {\r\n  MongoClient.connect(dbConfig.dbURI, (error, client) => {\r\n    if (error) throw error;\r\n    try {\r\n      const db = client.db(dbConfig.dbName);\r\n      console.log(\"connected to the server!\");\r\n      const queryResult = db\r\n        .collection(\"quotes\")\r\n        .findOne({ author: \"MWR\" })\r\n        .then(res.status(200).json)\r\n        .catch(console.error);\r\n\r\n      console.log(queryResult);\r\n      client\r\n        .close()\r\n        .then(() => console.log(\"connection closed.\"))\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      return console.error(err);\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}