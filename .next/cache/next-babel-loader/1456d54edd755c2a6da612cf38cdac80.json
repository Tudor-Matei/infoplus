{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nexport default function (state) {\n  var _useState = useState(state),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var inputsLength = _Object$keys(state).length;\n\n  var setInputEvent = function setInputEvent(e, inputType) {\n    return setInput(inputsLength === 1 ? _defineProperty({}, inputType, e.currentTarget.value) : _objectSpread({}, input, _defineProperty({}, inputType, e.currentTarget.value)));\n  };\n\n  return [input, setInputEvent];\n}","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/components/hooks/inputManagement.js"],"names":["useState","state","input","setInput","inputsLength","length","setInputEvent","e","inputType","currentTarget","value"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,UAASC,KAAT,EAAgB;AAAA,kBACHD,QAAQ,CAACC,KAAD,CADL;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAE7B,MAAMC,YAAY,GAAG,aAAYH,KAAZ,EAAmBI,MAAxC;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAIC,SAAJ;AAAA,WACpBL,QAAQ,CACNC,YAAY,KAAK,CAAjB,uBACOI,SADP,EACmBD,CAAC,CAACE,aAAF,CAAgBC,KADnC,sBAESR,KAFT,sBAEiBM,SAFjB,EAE6BD,CAAC,CAACE,aAAF,CAAgBC,KAF7C,EADM,CADY;AAAA,GAAtB;;AAOA,SAAO,CAACR,KAAD,EAAQI,aAAR,CAAP;AACD","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function(state) {\r\n  const [input, setInput] = useState(state);\r\n  const inputsLength = Object.keys(state).length;\r\n  const setInputEvent = (e, inputType) =>\r\n    setInput(\r\n      inputsLength === 1\r\n        ? { [inputType]: e.currentTarget.value }\r\n        : { ...input, [inputType]: e.currentTarget.value }\r\n    );\r\n\r\n  return [input, setInputEvent];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}