{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nexport default function (state) {\n  const {\n    0: input,\n    1: setInput\n  } = useState({\n    name: \"\",\n    email: \"\"\n  });\n\n  const onChange = (e, inputType) => setInput(_objectSpread({}, input, {\n    [inputType]: e.currentTarget.value\n  }));\n\n  return [input, onChange];\n}","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/Proiecte Web/infoplus/components/hooks/inputManagement.js"],"names":["useState","state","input","setInput","name","email","onChange","e","inputType","currentTarget","value"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAAlC;;AAKA,QAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,SAAJ,KACfL,QAAQ,mBAAMD,KAAN;AAAa,KAACM,SAAD,GAAaD,CAAC,CAACE,aAAF,CAAgBC;AAA1C,KADV;;AAGA,SAAO,CAACR,KAAD,EAAQI,QAAR,CAAP;AACD","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function(state) {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const onChange = (e, inputType) =>\r\n    setInput({ ...input, [inputType]: e.currentTarget.value });\r\n\r\n  return [input, onChange];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}